카카오톡 전송 관련 HTML/JavaScript 코드
===============================================

1. 공유 메뉴 HTML (2832-2853줄)
===============================
function shareResult() {
    const options = `
        <div style="display: flex; flex-direction: column; gap: 10px;">
            <button class="btn btn-primary" onclick="shareKakao()">💬 카카오톡 전송</button>
            <button class="btn btn-primary" onclick="shareSMS()">💌 문자 전송</button>
            <button class="btn btn-primary" onclick="shareEmail()">📧 이메일 전송</button>
            <button class="btn btn-secondary" onclick="closeShareOptions()">취소</button>
        </div>
    `;
    
    const modal = document.createElement('div');
    modal.id = 'shareOptionsModal';
    modal.style.cssText = 'position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.7); z-index: 3000; display: flex; justify-content: center; align-items: center;';
    modal.innerHTML = `
        <div style="background: white; padding: 30px; border-radius: 15px; max-width: 400px; width: 90%;">
            <h3 style="text-align: center; margin-bottom: 20px;">공유 방법 선택</h3>
            ${options}
        </div>
    `;
    document.body.appendChild(modal);
}

2. 산출 결과 요약 텍스트 생성 (2861-2930줄)
===========================================
function generateSummaryText() {
    let text = `━━━━━━━━━━━━━━━━━━\n`;
    text += `📊 ${currentSiteName}\n`;
    text += `━━━━━━━━━━━━━━━━━━\n`;
    text += `작성일: ${new Date().toLocaleString('ko-KR')}\n`;
    text += `로스율: ${Math.round(currentLossRate * 100)}%\n\n`;
    
    // 석고보드 종류별 집계
    const groupedByType = {};
    const groupedByJoist = {};
    
    walls.forEach(wall => {
        if (wall.width && wall.height) {
            const area = (wall.width * wall.height) / 1000000;
            const boardArea = getBoardArea(wall.boardSize);
            let boards = (area / boardArea);
            boards *= (wall.constructionSide === '2P' ? 2 : 1);
            boards *= (wall.faceDirection === '양면' ? 2 : 1);
            boards *= (1 + currentLossRate);
            const finalBoards = Math.ceil(boards);
            
            const boardKey = `${wall.boardType}-${wall.boardSize}-${wall.boardThickness}`;
            if (!groupedByType[boardKey]) {
                groupedByType[boardKey] = {
                    type: wall.boardType,
                    size: wall.boardSize,
                    thickness: wall.boardThickness,
                    totalBoards: 0
                };
            }
            groupedByType[boardKey].totalBoards += finalBoards;
            
            // 각재 집계 (간단 버전)
            if (wall.joistType === '목자재') {
                const joistKey = wall.woodType;
                if (!groupedByJoist[joistKey]) {
                    groupedByJoist[joistKey] = { name: wall.woodType, count: 0 };
                }
                // 간단 계산
                const verticalCount = Math.floor(wall.width / wall.joistSpacing) + 1;
                const horizontal = Math.ceil(wall.width / 2700) * 2;
                let total = verticalCount + horizontal;
                total *= (wall.faceDirection === '양면' ? 2 : 1);
                groupedByJoist[joistKey].count += Math.ceil(total * (1 + currentLossRate));
            }
        }
    });
    
    text += `【석고보드】\n`;
    Object.keys(groupedByType).forEach(key => {
        const group = groupedByType[key];
        text += `▪ ${group.type} ${group.size} ${group.thickness}\n`;
        text += `  → ${group.totalBoards}장\n`;
    });
    
    text += `\n【목자재/각재】\n`;
    Object.keys(groupedByJoist).forEach(key => {
        const group = groupedByJoist[key];
        text += `▪ ${group.name} (2700mm)\n`;
        text += `  → ${group.count}개\n`;
    });
    
    text += `\n━━━━━━━━━━━━━━━━━━\n`;
    text += `부산경남 전기공사 전문업체\n`;
    text += `이에스테크 010-4087-1436\n`;
    text += `━━━━━━━━━━━━━━━━━━`;
    
    return text;
}

3. 카카오톡 전송 메인 함수 (2932-2973줄)
=======================================
function shareToKakao() {
    const summaryText = generateSummaryText();
    
    // 모바일/PC 구분
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    
    if (isMobile) {
        // 모바일: Web Share API 우선 시도, 실패 시 클립보드 복사
        if (navigator.share) {
            navigator.share({
                title: `${currentSiteName} 산출 결과`,
                text: summaryText
            }).then(() => {
                alert('✅ 카카오톡으로 전송되었습니다!');
            }).catch((error) => {
                console.log('공유 취소:', error);
                // 실패 시 클립보드 복사
                copyToClipboard(summaryText);
            });
        } else {
            // Web Share API 지원 안하는 경우 클립보드 복사
            copyToClipboard(summaryText);
        }
    } else {
        // PC: Web Share API 또는 클립보드 복사
        if (navigator.share) {
            navigator.share({
                title: `${currentSiteName} 산출 결과`,
                text: summaryText
            }).then(() => {
                alert('✅ 카카오톡으로 전송되었습니다!');
            }).catch((error) => {
                console.log('공유 취소:', error);
                // 실패 시 클립보드 복사
                copyToClipboard(summaryText);
            });
        } else {
            copyToClipboard(summaryText);
        }
    }
}

4. 클립보드 복사 함수 (2975-2995줄)
==================================
function copyToClipboard(text) {
    if (navigator.clipboard) {
        navigator.clipboard.writeText(text).then(() => {
            // 모바일에서 더 친화적인 메시지 표시
            const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
            
            if (isMobile) {
                alert('📋 복사 완료!\n\n카카오톡 앱을 열고\n원하는 채팅방에서\n붙여넣기 하세요!');
            } else {
                alert('📋 클립보드에 복사되었습니다!\n\n카카오톡을 열고 붙여넣기 하세요.\n\n복사된 내용:\n━━━━━━━━━\n' + text.substring(0, 100) + '...');
            }
        }).catch(() => {
            // 클립보드 복사 실패 시 텍스트 직접 표시
            showTextModal(text);
        });
    } else {
        // 클립보드 API 지원 안하는 경우 텍스트 직접 표시
        showTextModal(text);
    }
}

5. 텍스트 모달 표시 함수 (2997-3029줄)
====================================
function showTextModal(text) {
    // 모달이 없으면 생성
    let modal = document.getElementById('textModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'textModal';
        modal.innerHTML = `
            <div class="text-modal-content">
                <div class="text-modal-header">
                    <h3>💬 카카오톡 전송</h3>
                    <button onclick="closeTextModal()" class="close-btn">&times;</button>
                </div>
                <div class="text-modal-body">
                    <p>아래 내용을 복사하여 카카오톡으로 전송하세요:</p>
                    <textarea readonly class="text-modal-textarea">${text}</textarea>
                    <div class="text-modal-buttons">
                        <button onclick="copyToClipboardFallback('${text.replace(/'/g, "\\'")}')" class="copy-btn">📋 복사하기</button>
                        <button onclick="closeTextModal()" class="close-modal-btn">닫기</button>
                    </div>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    
    // 텍스트 업데이트
    const textarea = modal.querySelector('.text-modal-textarea');
    textarea.value = text;
    
    // 모달 표시
    modal.classList.add('show');
}

6. 대체 복사 방법 (3039-3057줄)
=============================
function copyToClipboardFallback(text) {
    const textarea = document.createElement('textarea');
    textarea.value = text;
    textarea.style.position = 'fixed';
    textarea.style.opacity = '0';
    document.body.appendChild(textarea);
    textarea.select();
    
    try {
        document.execCommand('copy');
        alert('📋 복사되었습니다!');
        closeTextModal();
    } catch (err) {
        alert('복사에 실패했습니다. 텍스트를 직접 선택하여 복사하세요.');
    }
    
    document.body.removeChild(textarea);
}

7. 공유 메뉴에서 카카오톡 호출 (3059-3063줄)
==========================================
function shareKakao() {
    closeShareOptions();
    shareToKakao();
}

8. 텍스트 모달 CSS 스타일 (575-701줄)
===================================
/* 텍스트 모달 스타일 */
#textModal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.7);
    z-index: 2000;
    display: none;
    align-items: center;
    justify-content: center;
    padding: 20px;
}

#textModal.show {
    display: flex;
}

.text-modal-content {
    background: white;
    border-radius: 15px;
    max-width: 90%;
    max-height: 80%;
    width: 500px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0,0,0,0.3);
}

.text-modal-header {
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
    padding: 20px;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.text-modal-header h3 {
    margin: 0;
    font-size: 1.2rem;
}

.text-modal-header .close-btn {
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background 0.2s ease;
}

.text-modal-header .close-btn:hover {
    background: rgba(255,255,255,0.2);
}

.text-modal-body {
    padding: 20px;
}

.text-modal-body p {
    margin: 0 0 15px 0;
    color: #666;
    font-size: 0.9rem;
}

.text-modal-textarea {
    width: 100%;
    height: 200px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    padding: 15px;
    font-family: 'Malgun Gothic', sans-serif;
    font-size: 0.9rem;
    line-height: 1.4;
    resize: none;
    background: #f9f9f9;
}

.text-modal-textarea:focus {
    outline: none;
    border-color: #667eea;
    background: white;
}

.text-modal-buttons {
    display: flex;
    gap: 10px;
    margin-top: 15px;
    justify-content: flex-end;
}

.copy-btn, .close-modal-btn {
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    font-size: 0.9rem;
}

.copy-btn {
    background: linear-gradient(45deg, #667eea, #764ba2);
    color: white;
}

.close-modal-btn {
    background: #e0e0e0;
    color: #666;
}

.copy-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 3px 8px rgba(0,0,0,0.2);
}

.close-modal-btn:hover {
    background: #d0d0d0;
}

===============================================
주요 개선사항:
1. 404 오류 해결 (talk.kakao.com/share URL 제거)
2. Web Share API 우선 사용
3. 클립보드 복사 대체 방법
4. 텍스트 모달 추가 (복사 실패 시)
5. 모바일/PC 구분 메시지
6. 사용자 친화적 UI
===============================================
